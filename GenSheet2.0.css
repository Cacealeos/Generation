/*In the CSS file, all class-names must have a.-prefix in their name, or Roll20 won't recognize the classes.
In the HTML file, this prefix is not needed. */
:root {
  --body: url('https://raw.githubusercontent.com/Cacealeos/roll20-character-sheets/master/Generation/Circles&Borders/BodyCircle.png');
  --mental: url('https://raw.githubusercontent.com/Cacealeos/roll20-character-sheets/master/Generation/Circles&Borders/MindCircle.png');
  --spirit: url('https://raw.githubusercontent.com/Cacealeos/roll20-character-sheets/master/Generation/Circles&Borders/SpiritCircle.png');
  --memory: url('https://raw.githubusercontent.com/Cacealeos/roll20-character-sheets/master/Generation/Circles&Borders/MemoryCircle.png');
  --demon: url('https://raw.githubusercontent.com/Cacealeos/roll20-character-sheets/master/Generation/Circles&Borders/DemonCircle.png');
  --necro: url('https://raw.githubusercontent.com/Cacealeos/roll20-character-sheets/master/Generation/Circles&Borders/NecroCircle.png');
  --neutral: url('https://raw.githubusercontent.com/Cacealeos/roll20-character-sheets/master/Generation/Circles&Borders/Avatar.png');
  --borderimg: url('https://raw.githubusercontent.com/Cacealeos/roll20-character-sheets/master/Generation/Circles&Borders/ColoredMetalAvatarBorder1.png');
  --bdcolor:  #FF8C00;
  --mncolor:  #8A2BE2;
  --spcolor:  #00FFFF;
  --mmcolor:  #F0F8FF;
  --dmcolor:  #B22222;
  --nccolor:  #556B2F;
  --ncolor: mediumspringgreen;

  --grayscale:  0;
  --huefilter:  0deg;
  --huefilter2:  0deg;
  --bg:  var(--neutral);
  --bgcolor: var(--ncolor);
  --bgcolor2:  mediumseagreen;
  --togglecatalyst:  toggleenergy;

}

/* @import url('https://fonts.googleapis.com/icon?family=Material+Icons');
importing icons doesn't work??? */

.material-icons {
  font-family: 'Material Icons';
  color:  yellow;
  font-weight: 400;
  display: none;
}

.App {
  position: absolute;
  color: var(--bgcolor);
  transition: all 1s ease-in;
  background: linear-gradient(to bottom left, black, black, var(--bgcolor2));
  border-style: solid;
  border-width: 2px;
  border-color: teal;
  overflow: hidden;
  height:  1500px;
  width:  850px;
}

.flash {
  opacity: 0;
  
  box-shadow: 0px 0px 3px 5px var(--bgcolor);
  height:  1000px;
  width:  850px;
  position:  fixed;
}

#mentaltheme[value="Mental"] ~ .App {
  --bg:  var(--mental);
  --bgcolor:  var(--ncolor);
  --bgcolor2:  var(--mncolor);
  --huefilter: 120deg;
  --huefilter2: 80deg;
  --grayscale: 0;
}

#mentaltheme[value="Mental"] ~ .flash {
  content: var(--mental);
  animation: toggleenergy 1s ease-in;
  animation-iteration-count: 2;
}

#bodytheme[value="Body"] ~ .App {
  --bg:  var(--body);
  --bgcolor:  var(--ncolor);
  --bgcolor2:  var(--bdcolor);
  --huefilter: 265deg;
  --huefilter2: 210deg;
  --grayscale: 0;
}

#bodytheme[value="Body"] ~ .flash {
  background-image: var(--body);
  animation: toggleenergy 1s ease-in;
  animation-iteration-count: 2;
}

#spirittheme[value="Spirit"] ~ .App {
  --bg:  var(--spirit);
  --bgcolor:  var(--ncolor);
  --bgcolor2:  var(--spcolor);
  --huefilter: 60deg;
  --huefilter2: 0deg;
  --grayscale: 0;
}

#spirittheme[value="Spirit"] ~ .flash {
  background-image: var(--spirit);
  animation: toggleenergy 1s ease-in;
  animation-iteration-count: 2;
}

#memorytheme[value="Memory"] ~ .App {
  --bg:  var(--memory);
  --bgcolor:  var(--ncolor);
  --bgcolor2:  var(--mmcolor);
  --huefilter: 0deg;
  --huefilter2: 345deg;
  --grayscale: 75%;
}

#memorytheme[value="Memory"] ~ .flash {
  background-image: var(--memory);
  animation: toggleenergy 1s ease-in;
  animation-iteration-count: 2;
}

#necrotheme[value="necroforce"] ~ .App {
  --bg:  var(--necro);
  --bgcolor:  var(--ncolor);
  --bgcolor2:  var(--nccolor);
  --huefilter: 330deg;
  --huefilter2: 285deg;
  --grayscale: 0;
}

#necrotheme[value="necroforce"] ~ .flash {
  background-image: var(--necro);
  animation: toggleenergy 1s ease-in;
  animation-iteration-count: 2;
}

#demontheme[value="Demon"] ~ .App {
  --bg:  var(--demon);
  --bgcolor:  var(--ncolor);
  --bgcolor2:  var(--dmcolor);
  --huefilter: 200deg;
  --huefilter2: 185deg;
  --grayscale: 0;
}

#demontheme[value="Demon"] ~ .flash {
  background-image: var(--demon);
  animation: toggleenergy 1s ease;
  animation-iteration-count: 2;
}

/* menu side bar */

.selector {
  position: fixed;
  z-index: 15;
  top:  25%;
  width:  25%;
  display:  flex;
  flex-flow: column;
  /*transform: rotateY(30deg);*/
}

.dualcell {
  display: flex;
  flex-flow: row;
  width: 100%;
}

.cell {
  flex-flow: row;
  width: 50%;
}

.theme,
.assault,
.vigilant,
.caster,
.universal,
.phasestep,
.phasejump,
.reflect,
.absorb,
.barrier,
.cutter,
.armor1,
.armor2,
.armor3,
.armor4,
.armor5,
.demon,
.necro {
  display: none;
}

.character,
.health,
.battle,
.passives,
.inventory,
.equipment,
.spells,
.styles,
.meleetechniques,
.energytechniques,
.training,
.memories,
.minions {
  position: inherit;
  background: transparent;
  top:  5%;
  left:  15%;
  transition: 450ms ease;
}

/*Animate 3d tab & background animation    drop-shadow(.5rem .5rem 1rem var(--bgcolor2))*/

@keyframes particles1 {
  0% {
    transform: rotate(0deg) ;
    opacity: 0;
  }
  20% {
    transform: rotate(120deg) ;
    opacity: .9;
  }
  40% {
    transform: rotate(240deg) ;
    opacity: 0;
  }
  60% {
    transform: rotate(360deg);
    opacity: .9;
  }
  80% {
    transform:  rotate(480deg);
    opacity: 0;
  }
  100% {
    transform: rotate(600deg);
    opacity: .9;
  }
}
@keyframes particles2 {
  0% {
    transform: rotateX(45deg) translateX(0%);
    opacity: 0;
  }
  25% {
    transform: rotateX(45deg) translateX(15%);
    opacity: 1;
  }
  50% {
    transform: rotateX(45deg) translateX(0%);
    opacity: 0;
  }
  75% {
    transform: rotateX(45deg) translateX(-15%);
    opacity: 1;
  }
  100% {
    transform: rotateX(45deg)translateX(0%);
    opacity: 0;
  }
}

@keyframes particles3 {
  0%  {
    opacity: 0;
  }
  50% {
    transform: skewX(25deg)  translateX(-20%) translateY(-3%) rotate(25deg);
    opacity: 1;
  }
  100% {
    transform: skewX(45deg)  translateX(-40%) translateY(-5%) rotate(45deg);
    opacity: 0;
  }
}

@keyframes rotation360 {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(359deg);
  }
}

@keyframes toggleenergy {
  0% {
    opacity: 0;
  }
  50% {
    opacity: 0;
  }
  100% {
    opacity: 0;
  }
}

@keyframes cacealeoslarge {
  0% {
    transform: skewY(25deg) skewX(25deg) rotate(0deg);
  }
  25% {
    transform: skewY(25deg) skewX(25deg) rotate(90deg);
  }
  50% {
    transform: skewY(25deg) skewX(25deg) rotate(180deg);
  }
  75% {
    transform: skewY(25deg) skewX(25deg) rotate(270deg);
  }
  100% {
    transform: skewY(25deg) skewX(25deg) rotate(359deg);
  }
}

@keyframes cacealeoscorner {
  0% {
    transform: skewY(50deg) skewX(-25deg) scale(.5, .7) rotate(0deg);
  }
  25% {
    transform: skewY(50deg) skewX(-25deg) scale(.5, .7) rotate(-90deg);
  }
  50% {
    transform: skewY(50deg) skewX(-25deg) scale(.5, .7) rotate(-180deg);
  }
  75% {
    transform: skewY(50deg) skewX(-25deg) scale(.5, .7) rotate(-270deg);
  }
  100% {
    transform: skewY(50deg) skewX(-25deg) scale(.5, .7) rotate(-359deg);
  }
}

@keyframes cacealeosupper {
  0% {
    transform: skewY(-20deg) skewX(-45deg) scale(1, .6) rotate(0deg);
  }
  25% {
    transform: skewY(-20deg) skewX(-45deg) scale(1, .6) rotate(-90deg);
  }
  50% {
    transform: skewY(-20deg) skewX(-45deg) scale(1, .6) rotate(-180deg);
  }
  75% {
    transform: skewY(-20deg) skewX(-45deg) scale(1, .6) rotate(-270deg);
  }
  100% {
    transform: skewY(-20deg) skewX(-45deg) scale(1, .6) rotate(-359deg);
  }
}

/*animationed background */
.bg-img {
  transition: all 1s ease-in;
  content:  var(--bg);
  position:  absolute;
  border-style: none;
  height: 56%;
  width: 100%;
  border-radius: 50%;
  box-shadow: 0px 0px 3px 5px var(--bgcolor2);
  padding: 0px;
  z-index: 2;
}

#bg-img1 {
  left: 15%;
  top:  15%;
  animation: cacealeoslarge 9s infinite linear;
  transform-origin: center;
}
#bg-img2 {
  top: -10%;
  left: 50%;
  animation: cacealeoscorner 12s infinite linear;
  transform-origin: center;
}
#bg-img3 {
  top: -50%;
  left:  20%;
  animation: cacealeosupper 11s infinite linear;
  transform-origin: center;
}

/* particles
<a href='https://www.freepik.com/vectors/background'>Background vector created by pikisuperstar - www.freepik.com</a>
<a href='https://www.freepik.com/vectors/background'>Background vector created by pikisuperstar - www.freepik.com</a>
<a href='https://www.freepik.com/vectors/abstract'>Abstract vector created by vector_corp - www.freepik.com</a>
url('https://raw.githubusercontent.com/Cacealeos/Generation/master/SpiritBorder.png');
*/
.bg-particle {
  position:  absolute;
  border-style: none;
  background-repeat: round;
  z-index: 1;
}
#bg-ptc1 {
  background-image: url('https://raw.githubusercontent.com/Cacealeos/Generation/master/Particles/AvatarParticle1.png');
  /* background-color: white; */
  
  background-size: contain;
  border-radius: 50%;
  filter: blur(5px) hue-rotate(var(--huefilter)) grayscale(var(--grayscale)) brightness(3) contrast(3);
  animation: particles1 60s infinite linear;
  bottom: -10%;
  height: 500%;
  width: 350%;
}
#bg-ptc2 {
  background-image: url('https://raw.githubusercontent.com/Cacealeos/Generation/master/Particles/AvatarParticle2.png');
  background-size: cover;
  border-radius: 25%;
  filter: blur(3px) hue-rotate(var(--huefilter)) grayscale(var(--grayscale)) brightness(3) saturate(200%); 
  animation: particles2 35s infinite linear;
  top:  -40%;
  right:  0%;
  height: 200%;
  width: 150%;
}
#bg-ptc3 { /* ptc3&4 are paired and layered together. They also coincide with 5 & 6. These are the lower left particles*/
  background-image: url('https://raw.githubusercontent.com/Cacealeos/Generation/master/Particles/AvatarParticle3.png');
  background-size: cover;
  
  height: 20%;
  width: 40%;
  border-radius: 35%;
  top: 30%;
  left: 30%;
  animation: particles3 9s infinite linear;
  filter: hue-rotate(var(--huefilter)) brightness(300%) drop-shadow(16px 16px 20px var(--bgcolor2)) ;
  z-index: 3;
  mix-blend-mode: lighten;
  display: none;
  /*need brighter png*/
}
#bg-ptc4 {
  background-image: url('https://raw.githubusercontent.com/Cacealeos/Generation/master/Particles/AvatarParticle3.png');
  background-size: cover;
  
  height: 25%;
  width: 60%;
  border-radius: 35%;
  top: 30%;
  left: 30%;
  animation: particles3 9s infinite linear;
  filter: hue-rotate(var(--huefilter)) brightness(300%) drop-shadow(16px 16px 20px var(--bgcolor2)) ;
  z-index: 3;
  mix-blend-mode: lighten;
  display: none;
  /*need brighter png*/
}
#bg-ptc5 { /* ptc5&6 are paired and layered together. They also coincide with 3 & 4. These are the lower left particles*/
  background-image: url('https://raw.githubusercontent.com/Cacealeos/Generation/master/Particles/AvatarParticle3.png');
  background-size: cover;
  
  height: 25%;
  width: 60%;
  border-radius: 35%;
  top: 0%;
  right: -30%;
  animation: particles3 9s infinite linear;
  filter: hue-rotate(var(--huefilter)) brightness(300%) drop-shadow(16px 16px 20px var(--bgcolor2)) ;
  z-index: 3;
  mix-blend-mode: lighten;
  display: none;
  /*need brighter png*/
}
#bg-ptc6 {
  background-image: url('https://raw.githubusercontent.com/Cacealeos/Generation/master/Particles/AvatarParticle3.png');
  background-size: cover;
  
  height: 25%;
  width: 60%;
  border-radius: 35%;
  top: 0%;
  right: -30%;
  animation: particles3 9s infinite linear;
  filter: hue-rotate(var(--huefilter)) brightness(300%) drop-shadow(16px 16px 20px var(--bgcolor2)) ;
  z-index: 3;
  mix-blend-mode: lighten;
  display: none;
  /*need brighter png*/
}

/*Builds tab transitions*/

#t0[value="character"] ~ #tab1, #t1[value="health"] ~ #tab2, #t2[value="battle"] ~ #tab3, #t3[value="equipment"] ~ #tab4,
#t4[value="styles"] ~ #tab5, #t5[value="inventory"] ~ #tab6, #t6[value="meleetechniques"] ~ #tab7, #t7[value="energytechniques"] ~ #tab8,
#t8[value="training"] ~ #tab9, #t9[value="spells"] ~ #tab10, #t10[value="passives"] ~ #tab0 {
  transform: translate3d(500px, -250px, 0);
  opacity: 0;
  z-index:  10;
} 

#t0[value="character"] ~ #tab2, #t1[value="health"] ~ #tab3, #t2[value="battle"] ~ #tab4, #t3[value="equipment"] ~ #tab5,
#t4[value="styles"] ~ #tab6, #t5[value="inventory"] ~ #tab7, #t6[value="meleetechniques"] ~ #tab8, #t7[value="energytechniques"] ~ #tab9,
#t8[value="training"] ~ #tab10, #t9[value="spells"] ~ #tab0, #t10[value="passives"] ~ #tab1 {
  transform: translate3d(450px, -225px, 0);
  opacity: 0;
  z-index:  10;
} 

#t0[value="character"] ~ #tab3, #t1[value="health"] ~ #tab4, #t2[value="battle"] ~ #tab5, #t3[value="equipment"] ~ #tab6,
#t4[value="styles"] ~ #tab7, #t5[value="inventory"] ~ #tab8, #t6[value="meleetechniques"] ~ #tab9, #t7[value="energytechniques"] ~ #tab10,
#t8[value="training"] ~ #tab0, #t9[value="spells"] ~ #tab1, #t10[value="passives"] ~ #tab2 {
  transform: translate3d(400px, -200px, 0);
  opacity: 0;
  z-index:  10;
} 

#t0[value="character"] ~ #tab4, #t1[value="health"] ~ #tab5, #t2[value="battle"] ~ #tab6, #t3[value="equipment"] ~ #tab7,
#t4[value="styles"] ~ #tab8, #t5[value="inventory"] ~ #tab9, #t6[value="meleetechniques"] ~ #tab10, #t7[value="energytechniques"] ~ #tab0,
#t8[value="training"] ~ #tab1, #t9[value="spells"] ~ #tab2, #t10[value="passives"] ~ #tab3 {
  transform: translate3d(350px, -175px, 0);
  opacity: 0;
  z-index:  10;
} 

#t0[value="character"] ~ #tab5, #t1[value="health"] ~ #tab6, #t2[value="battle"] ~ #tab7, #t3[value="equipment"] ~ #tab8,
#t4[value="styles"] ~ #tab9, #t5[value="inventory"] ~ #tab10, #t6[value="meleetechniques"] ~ #tab0, #t7[value="energytechniques"] ~ #tab1,
#t8[value="training"] ~ #tab2, #t9[value="spells"] ~ #tab3, #t10[value="passives"] ~ #tab4 {
  transform: translate3d(300px, -150px, 0);
  opacity: 0;
  z-index:  10;
} 

#t0[value="character"] ~ #tab6, #t1[value="health"] ~ #tab7, #t2[value="battle"] ~ #tab8, #t3[value="equipment"] ~ #tab9,
#t4[value="styles"] ~ #tab10, #t5[value="inventory"] ~ #tab0, #t6[value="meleetechniques"] ~ #tab1, #t7[value="energytechniques"] ~ #tab2,
#t8[value="training"] ~ #tab3, #t9[value="spells"] ~ #tab4, #t10[value="passives"] ~ #tab5 {
  transform: translate3d(250px, -125px, 0);
  opacity: 0;
  z-index:  10;
} 

#t0[value="character"] ~ #tab7, #t1[value="health"] ~ #tab8, #t2[value="battle"] ~ #tab9, #t3[value="equipment"] ~ #tab10,
#t4[value="styles"] ~ #tab0, #t5[value="inventory"] ~ #tab1, #t6[value="meleetechniques"] ~ #tab2, #t7[value="energytechniques"] ~ #tab3,
#t8[value="training"] ~ #tab4, #t9[value="spells"] ~ #tab5, #t10[value="passives"] ~ #tab6 {
  transform: translate3d(200px, -100px, 0);
  opacity: 0;
  z-index:  10;
} 

#t0[value="character"] ~ #tab8, #t1[value="health"] ~ #tab9, #t2[value="battle"] ~ #tab10, #t3[value="equipment"] ~ #tab0,
#t4[value="styles"] ~ #tab1, #t5[value="inventory"] ~ #tab2, #t6[value="meleetechniques"] ~ #tab3, #t7[value="energytechniques"] ~ #tab4,
#t8[value="training"] ~ #tab5, #t9[value="spells"] ~ #tab6, #t10[value="passives"] ~ #tab7 {
  transform: translate3d(240px, -120px, 0);
  opacity: 0%;
  z-index:  10;
} 

#t0[value="character"] ~ #tab9, #t1[value="health"] ~ #tab10, #t2[value="battle"] ~ #tab0, #t3[value="equipment"] ~ #tab1,
#t4[value="styles"] ~ #tab2, #t5[value="inventory"] ~ #tab3, #t6[value="meleetechniques"] ~ #tab4, #t7[value="energytechniques"] ~ #tab5,
#t8[value="training"] ~ #tab6, #t9[value="spells"] ~ #tab7, #t10[value="passives"] ~ #tab8 {
  transform: translate3d(240px, -80px, 0);
  opacity: 20%;
  z-index:  10;
} 

#t0[value="character"] ~ #tab10, #t1[value="health"] ~ #tab0, #t2[value="battle"] ~ #tab1, #t3[value="equipment"] ~ #tab2,
#t4[value="styles"] ~ #tab3, #t5[value="inventory"] ~ #tab4, #t6[value="meleetechniques"] ~ #tab5, #t7[value="energytechniques"] ~ #tab6,
#t8[value="training"] ~ #tab7, #t9[value="spells"] ~ #tab8, #t10[value="passives"] ~ #tab9 {
  transform: translate3d(160px, -40px, 0);
  opacity: 60%;
  z-index:  10;
} 
/* Active tab */
#t0[value="character"] ~ #tab0, #t1[value="health"] ~ #tab1, #t2[value="battle"] ~ #tab2, #t3[value="equipment"] ~ #tab3,
#t4[value="styles"] ~ #tab4, #t5[value="inventory"] ~ #tab5, #t6[value="meleetechniques"] ~ #tab6, #t7[value="energytechniques"] ~ #tab7,
#t8[value="training"] ~ #tab8, #t9[value="spells"] ~ #tab9, #t10[value="passives"] ~ #tab10 {
  transform: translate3d(0, 0%, 0);
  /* box-shadow:  inset 0 0 25px 30px var(--bgcolor2); */
  z-index:  20;
}
/*************************************************************** END TRANSITIONS ************************************************************************/
.melee-arts {
  flex-flow: column;
  width: 50%;
}
.menuborder {
  border-image-source: var(--borderimg);
  border-image-slice: 300;
  border-image-width: 45px;
  border-image-outset: 5px;
  border-width: 15px;
  border-radius: 10%;
  background-image: url('https://raw.githubusercontent.com/Cacealeos/Generation/master/BlueType1/bluecenter2.jpg');
  background-size: cover;
  background-position: top left, top right, bottom left, bottom right;
  background-repeat: no-repeat;
  margin:  10px;
  filter: hue-rotate(var(--huefilter2)) grayscale(var(--grayscale));
  padding: 15px;
}

.menuborder-secondary {
  border-image-source: var(--borderimg);
  border-image-slice: 300;
  border-image-width: 45px;
  border-image-outset: 5px;
  border-width: 15px;
  border-radius: 3%;
  background-image: 
  url('https://raw.githubusercontent.com/Cacealeos/Generation/master/BlueType1/bluewallside10.jpg'),
  url('https://raw.githubusercontent.com/Cacealeos/Generation/master/BlueType1/bluewallside11.jpg'),
  url('https://raw.githubusercontent.com/Cacealeos/Generation/master/BlueType1/bluewallside10-2.jpg'),
  url('https://raw.githubusercontent.com/Cacealeos/Generation/master/BlueType1/bluewallside11-2.jpg');
  flex-basis: auto;
  
  background-size: 50% 50%;
  background-position: top left, top right, bottom left, bottom right;
  background-repeat: no-repeat;
  box-shadow:  inset 0 0 25px 30px black;
  padding: 10px;
  margin-top: 10px;
  margin-left: 5px;
  margin-right: 5px;
  filter: hue-rotate(var(--huefilter2)) grayscale(var(--grayscale));
}

.spell-tech-points {
  position: relative; 
  left: 10%; 
  width: 75%; 
}

/****************************************************************STAT SECTION ***********************************************************/

.char-sect {
  width: 100%;
  display: flex;
  text-align: center;
  transition: all 0.4s ease-in;
  flex-flow: row;
  flex-basis: content;
}

div.stats, div.skills, div.energy-catalyst {
  width: 33%;
  height: 100%;
  box-sizing: border box;
  border-color: var(--bgcolor);
  padding: 5px;
}

span.label-energy, span.label-skills, span.label-stats, span.label-general {
  color: deeppink;
  font-size: 20px;
  border-style: double;
  border-color: var(--bgcolor2);
  background: black;
}
/****************************************************************END STAT SECTION ***********************************************************/

b.pictos-icons {
  font-size: 20px; 
  font-family: 'Pictos';
  background-color: yellow;
  margin-left: 5px;
  border-radius: 75%;
  padding: 2px;
}
b.pictos-icons-three {
  font-size: 20px; 
  font-family: 'Pictos Three';
  background-color: yellow;
  margin-left: 5px;
  border-radius: 75%;
  padding: 2px;
}
b.pictos-icons-custom {
  font-size: 20px; 
  font-family: 'Pictos Custom';
  background-color: yellow;
  margin-left: 5px;
  border-radius: 75%;
  padding: 2px;
}
/*********************************************************ECONOMY SECTION *******************************************************************/

.Economy {
  text-align: center;
  display: flex;
  position: relative;
  width: 60%;
  opacity: 0;
  background-color: #04020C;
  border-image-slice: 30%;
  border-image-width: 25px;
  border-image-outset: 10px;
  height: 0px;
  border-image-source: url('https://raw.githubusercontent.com/Cacealeos/Generation/master/Particles/eletricborder.png');
  left: 22%;
  transition: 2s all;
}
input.hiddeneco[value="EXIT COMBAT"] ~ .Economy {
  opacity: 1;
  height: 400px;
  transition: height 1s ease-out opacity .5s ease-out;
}
input.hiddeneco[value="EXIT COMBAT"] ~ .economy-inline,
input.hiddeneco[value="EXIT COMBAT"] ~ .economy-inline2,
input.hiddeneco[value="EXIT COMBAT"] ~ .ecobtn {
  opacity: 1;
  transition: opacity 1.5s ease-out;
  transition-delay: 1.5s;
}
.economy-TTT {
  position: absolute;
  left: 10%;
  top: 0%;
  z-index: 2;
}
.economy-TTTX {
  position: absolute;
  right: 10%;
  top: 0%;
  z-index: 2;
}
.economy-ECO {
  position: absolute;
  left: 33%;
  top: 15%;
  z-index: 1;
}
.economy-LF {
  position: absolute;
  top: 35%;
  z-index: 2;
}
.economy-MN {
  position: absolute;
  left: 50%;
  top: 35%;
  z-index: 2;
}
.economy-inline {
  display: inline-block;
  padding-top: 30px;
  padding-bottom: 30px;
  padding-left: 5px;
  padding-right: 5px;
  width:  30%;
  overflow: hidden;
  margin: 0px;
  flex-basis: auto;
  background-image: url('https://raw.githubusercontent.com/Cacealeos/Generation/master/Particles/ParticleCircle.gif');
  background-repeat: no-repeat;
  background-position: center;
  background-size: 130%;
  border-radius: 50%;
  opacity: 0;
}
.economy-inline2 {
  display: inline-block;
  padding-top: 40px;
  padding-bottom: 50px;
  padding-right: 40px;
  padding-left: 40px;
  width:  30%;
  overflow: hidden;
  margin: 0px;
  flex-basis: auto;
  background-image: url('https://raw.githubusercontent.com/Cacealeos/Generation/master/Particles/blue-flame-flame.gif');
  background-repeat: no-repeat;
  background-position: center;
  background-size: 150%;
  border-radius: 50%;
  opacity: 0;
}
.economy-inputs {
  background-color: transparent;
  text-align: center;
  color: deeppink;
  border-style: none;
  width: 15%;
  opacity: 75%;
  font-size: 25px;
}
.ecoBar {
  width:  90%;
  height: 10%;
  position: absolute;
  bottom: 10%;
  left:  5%;
  border-radius: 50%;
  border-style: groove;
  border-color: white;
  background: radial-gradient(black, silver);
  box-shadow: white -5px -15px 25px -15px;
}
.ecobtn {
  text-align: center; 
  position: absolute;
  left: 13%;
  bottom: 0%;
  opacity: 0;
}

/*********************************************************END ECONOMY SECTION *******************************************************************/

input.character-inputs {
  padding: 3px;
  background-image: url('https://raw.githubusercontent.com/Cacealeos/Generation/master/BlueType1/bluewallmiddle.jpg');
  background-size: cover;
  background-repeat: no-repeat;
  mix-blend-mode: luminosity;
  text-align: center;
  border-style: inset;
  border-color: var(--bgcolor);
  color: lime;
  width: 15%;
  font-size: 14px;
}

input.entry-inputs {
  padding: 3px;
  background-image: url('https://raw.githubusercontent.com/Cacealeos/Generation/master/BlueType1/bluewallmiddle.jpg');
  background-size: cover;
  background-repeat: no-repeat;
  mix-blend-mode: luminosity;
  text-align: center;
  border-style: inset;
  border-color: var(--bgcolor);
  color: lime;
  width: 15%;
  font-size: 14px;
}
input.entry-inputssmall {
  padding: 3px;
  background: linear-gradient(to top right, var(--bgcolor2), rgba(0,0,0,0));
  text-align: center;
  border-color: var(--bgcolor);
  border-right: 35px;
  border-top: 35px;
  color: lime;
  width: 15%;
  font-size: 20px;
}
table.vitality-status {
    border-style: groove; 
    position: relative;
    border-width: 5px; 
    background: black;
}

/* Right side represent the input attribute, hidden or otherwise, that, when it has its value changed to the corrisponding string,
will reveal the Left side block. The "name" of the attribute is not shown here; only the class */
.moduletype-toggle[value="assault"] ~ div.assault,
.moduletype-toggle[value="vigilant"] ~ div.vigilant,
.moduletype-toggle[value="caster"] ~ div.caster,
.moduletype-toggle[value="universal"] ~ div.universal {
  display: block;
}

.defensive-technique-phasestep[value="active"] ~ div.phasestep,
.defensive-technique-phasejump[value="active"] ~ div.phasejump,
.defensive-technique-reflect[value="active"] ~ div.reflect,
.defensive-technique-absorb[value="active"] ~ div.absorb,
.defensive-technique-barrier[value="active"] ~ div.barrier,
.defensive-technique-cutter[value="active"] ~ div.cutter,
.defensive-module1:not([value=""]) ~ div.armor1,
.defensive-module2:not([value=""]) ~ div.armor2,
.defensive-module3:not([value=""]) ~ div.armor3,
.defensive-module4:not([value=""]) ~ div.armor4,
.defensive-module5:not([value=""]) ~ div.armor5 {
  display: block;
  background: radial-gradient(.00ffCC, .00CC99);
  color:  teal;
  border-style: solid;
  border-width: 2px;
  border-color: teal;
}

.deathcovenant:not([value="0"]) ~ div.necro,
.halfbreed:not([value="0"]) ~ div.demon {
    display: inline;
}
.center {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 40px;
}

/* Configure a container for the radio buttons. */
.races {
  display: inline-flex;
  align-items: center;
}

button.semi {
  background-color: teal;
  color:  black;
  font-weight: bold;
  font-size: 11px;
  filter: hue-rotate(var(--huefilter2));
}

button.semi:hover {
  background: black;
  font-weight: bold;
  color: teal;
  transition: all 0.2s ease-in;
  filter: hue-rotate(var(--huefilter2));
}

.character-semi,
.equipment-semi,
.health-semi,
.battle-semi,
.styles-semi,
.spells-semi,
.energy-techniques-semi,
.melee-techniques-semi,
.passives-semi,
.inventory-semi,
.training-semi {
  position: relative;
  background-color: teal;
  border-width: 0px;
  border-radius: 15px;
  color:  black;
  text-align: right;
  font-weight: bold;
  font-size: 12px;
  filter: hue-rotate(var(--huefilter2))
}
/*button hover effects*/
.character-semi:hover,
.health-semi:hover,
.battle-semi:hover,
.equipment-semi:hover,
.styles-semi:hover,
.spells-semi:hover,
.energy-techniques-semi:hover,
.melee-techniques-semi:hover,
.passives-semi:hover,
.inventory-semi:hover,
.training-semi:hover,
.tabstoggle[value="character"] ~ button.character-semi,
.tabstoggle[value="health"] ~ button.health-semi,
.tabstoggle[value="battle"] ~ button.battle-semi,
.tabstoggle[value="passives"] ~ button.passives-semi,
.tabstoggle[value="inventory"] ~ button.inventory-semi,
.tabstoggle[value="equipment"] ~ button.equipment-semi,
.tabstoggle[value="spells"] ~ button.spells-semi,
.tabstoggle[value="styles"] ~ button.styles-semi,
.tabstoggle[value="meleetechniques"] ~ button.melee-techniques-semi,
.tabstoggle[value="energytechniques"] ~ button.energy-techniques-semi,
.tabstoggle[value="training"] ~ button.training-semi {
  padding:  10px;
  background: black;
  font-weight: bold;
  color: teal;
  transition: all 0.2s ease-in;
  transform: translateX(20%);
  filter: hue-rotate(var(--huefilter2));
}

/* Configure the button styling. This example makes it look like a radio. */

button.race > span.checked {
  width: 6px;
  height: 6px;
  border-radius: 50%;
  background: buttontext;
}

/* Configure a container for the radio buttons. */

.deathcovenant:not([value="0"]) ~ button.necro,
.halfbreed:not([value="0"]) ~ button.demon,
button.race,
button.mod,
button.energy {
  padding: 5;
  border: solid 1px .a8a8a8;
  cursor: pointer;
  width: 14px;
  height: 14px;
  border-radius: 50%;
  display: flex;
  justify-content: center;
  align-items: center;
}

button.demon > span.checked,
button.necro > span.checked,
button.energy > span.checked,
button.mod > span.checked {
  width: 6px;
  height: 6px;
  border-radius: 50%;
  background: buttontext;
}

/* Configure the button styling. This example makes it look like a radio. */
.mods {
  display: flex;
  align-items: center;
  flex-flow: row wrap;
}
/*
.togglemental::before {
  content: var(--mental);
  background-blend-mode:  ;
}
*/

/******************************************************************* CATALYST SECTION ********************************************************************/
.catalysts {

  width: 75%;
  display: flex;
  flex-flow: row wrap;
  position: relative;
  top: -5%;
  left: 15%;
  border-image-source: url('https://raw.githubusercontent.com/Cacealeos/Generation/master/Circles&Borders/metalborder.png');
  border-image-slice: 300;
  border-image-width: 45px;
  border-image-outset: 12px;
  border-width: 10px;
  
  z-index: 21;
}

.catalystdisplay {
  
  width: 95%;
  
  text-align: center;
  text-transform: uppercase;
  border-radius: 3% 3% 0 0;
  background-image: url('https://raw.githubusercontent.com/Cacealeos/Generation/master/BlueType1/bluewallside8.jpg');
  background-size: 65%;
  background-position: top;
  background-repeat: no-repeat;
  background-color: black;
  padding: 17px;
}
.catalystdisplay2 {
  padding:  17px;
  text-align: center;
  width: 95%;
  flex-basis: auto;
  border-radius: 0 0 3% 3%;
  background-image: 
  url('https://raw.githubusercontent.com/Cacealeos/Generation/master/BlueType1/bluewallside3.jpg'), 
  url('https://raw.githubusercontent.com/Cacealeos/Generation/master/BlueType1/bluewallside3-2.jpg');
  background-position: left center, right center;  
  background-size: 50%;
  background-repeat: no-repeat round;
  box-shadow:  inset 0 5px 15px 20px black;
}

input.catalyst {
  position: relative;
  background-image: url('https://raw.githubusercontent.com/Cacealeos/Generation/master/BlueType1/bluewallmiddle.jpg');
  background-size: contain;
  background-repeat: round;
  text-align: center;
  color: lime;
  font-size: 30px;
  filter: grayscale(100%);
  margin-left: 15px;
  margin-right: 15px;
}
.catalystmargins {
  margin-left: 30px;
  margin-right: 30px;
}

.togglecatalyst {
  cursor: pointer;
  background-repeat: round;
  border-radius: 50%;
  background-color: black;
  background-size: cover;
  padding:  0px;
  border:  0px;
    height: 65px;  
    width: 65px;
  transition: 200ms all;
  animation: rotation360 3s infinite linear;
}

.togglecatalyst:active {
  --togglecatalyst:  none;
}

.togglecatalyst:hover {
  animation: rotation360 0s infinite linear;
  background-color: cyan;
}

.togglemental {
  background-image: var(--mental);
  box-shadow: 0px 0px 3px 5px violet; 
}

.togglebody {
  background-image: var(--body);
  box-shadow: 0px 0px 3px 5px gold; 
}

.togglespirit {
  background-image: var(--spirit);
  box-shadow: 0px 0px 3px 5px turquoise; 
}

.togglememory {
  background-image: var(--memory);
  box-shadow: 0px 0px 3px 5px white; 
}

.toggledemon {
  background-image: var(--demon);
  box-shadow: 0px 0px 3px 5px crimson; 
}

.togglenecro {
  background-image: var(--necro);
  box-shadow: 0px 0px 3px 5px forestgreen; 
}

.combat_btn {
  position:  absolute;
  bottom:  -5%;
  left: 40%;
  border-radius: 25%;
  font-weight: bold;
  color: crimson; 
  text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000;
  box-shadow: 0 0 15px red;
  background-image: url('https://raw.githubusercontent.com/Cacealeos/Generation/master/Particles/redflame.png');
  background-size: contain;
}

/******************************************************************* END CATALYST SECTION ********************************************************************/

/* Hide the "checked" section of the radio if the attribute value does not match the radio */

input.energy:not([value="Demon"]) ~ button.demon > span.checked,
input.energy:not([value="necroforce"]) ~ button.necro > span.checked,
input.race:not([value="Ciaha"]) ~ button.race-1 > span.checked,
input.race:not([value="Magian"]) ~ button.race-2 > span.checked,
input.race:not([value="Adept"]) ~ button.race-3 > span.checked,
input.race:not([value="Arbiter"]) ~ button.race-4 > span.checked,
input.race:not([value="Necrian"]) ~ button.race-5 > span.checked,
input.moduletype-toggle:not([value="assault"]) ~ button.mod-1 > span.checked,
input.moduletype-toggle:not([value="vigilant"]) ~ button.mod-2 > span.checked,
input.moduletype-toggle:not([value="caster"]) ~ button.mod-3 > span.checked,
input.moduletype-toggle:not([value="universal"]) ~ button.mod-4 > span.checked,
input.weapon-toggle:not([value="primary"]) ~ div.primaryweapon,
input.weapon-toggle:not([value="secondary"]) ~ div.secondaryweapon,
input.weapon-toggle:not([value="dual"]) ~ div.dualweapon,
input.weapon-toggle:not([value="ranged"]) ~ div.rangedweapon {
  display: none;
}

/* Configure a container for the toggle */
.toggle-container {
  display: inline-flex;
  align-items: center;

}

/* Configure the button styling. This example makes it look like a checkbox. */
button.toggle, button.checkbox {
  padding: 0;
  border: solid 1px .a8a8a8;
  cursor: pointer;

  width: 16px;
  height: 16px;
  border-radius: 3px;
  display: flex;
  justify-content: center;
  align-items: center;

  font-size: 12px;
}

/* Hide the "checked" section of the toggle if the attribute value is not "1". */
input.toggle:not([value="1"]) ~ button.toggle > span.checked {
  display: none;
}

/* Configure a container for the toggle */
.toggle-checkbox {
  display: inline-flex;
  align-items: center;
}

/* Hide the "checked" section of the toggle if the attribute value is not "1". */
input.checkbox:not([value="1"]) ~ button.checkbox > span.checked {
  display: none;
}
div.cooldown {
    width: 35%;
    height: 20px;
    border: 1px solid black;
    color: gray;
    text-align: center;
}
input.cooldown[value="8"] ~ div.cooldown {
    background: purple;
    width: 100%;
}
input.cooldown[value="8"] ~ div.cooldown:before {
        content: "8 Turns of Cooldown";
}
input.cooldown[value="7"] ~ div.cooldown {
    background: purple;
    width: 100%;
}
input.cooldown[value="7"] ~ div.cooldown:before {
        content: "7 Turns of Cooldown";
}
input.cooldown[value="6"] ~ div.cooldown {
    background: red;
    width: 100%;
}
input.cooldown[value="6"] ~ div.cooldown:before {
        content: "6 Turns of Cooldown";
}
input.cooldown[value="5"] ~ div.cooldown {
    background: red;
    width: 100%;
}
input.cooldown[value="5"] ~ div.cooldown:before {
        content: "5 Turns of Cooldown";
}
input.cooldown[value="4"] ~ div.cooldown {
    background: yellow;
    width: 100%;
}
input.cooldown[value="4"] ~ div.cooldown:before {
        content: "4 Turns of Cooldown";
}
input.cooldown[value="3"] ~ div.cooldown {
    background: yellow;
    width: 100%;
}
input.cooldown[value="3"] ~ div.cooldown:before {
        content: "3 Turns of Cooldown";
}
input.cooldown[value="2"] ~ div.cooldown {
    background: green;
    width: 100%;
}
input.cooldown[value="2"] ~ div.cooldown:before {
        content: "2 Turns of Cooldown";
}
input.cooldown[value="1"] ~ div.cooldown {
    background: green;
    width: 100%;
}
input.cooldown[value="1"] ~ div.cooldown:before {
        content: "1 Turns of Cooldown";
}
input.cooldown[value=""] ~ div.cooldown {
        display: none;
        width: 100%;
}

div.techbar {
    width: 90%;
    height: 20px;
    border: 1px solid black;
    color: gray;
    text-align: center;
}

input.techbar[value="5"] ~ div.techbar {
    background: purple;
}
input.techbar[value="5"] ~ div.techbar:before {
        content: "5 Turns of Cooldown";
}
input.techbar[value="4"] ~ div.techbar {
    background: red;
}
input.techbar[value="4"] ~ div.techbar:before {
        content: "4 Turns of Cooldown";
}
input.techbar[value="3"] ~ div.techbar {
    background: orange;
}
input.techbar[value="3"] ~ div.techbar:before {
        content: "3 Turns of Cooldown";
}
input.techbar[value="2"] ~ div.techbar {
    background: yellow;
}
input.techbar[value="2"] ~ div.techbar:before {
        content: "2 Turns of Cooldown";
}
input.techbar[value="1"] ~ div.techbar {
    background: green;
}
input.techbar[value="1"] ~ div.techbar:before {
        content: "1 Turns of Cooldown";
}
input.techbar[value=""] ~ div.techbar:before {
    background: white;
}
input.techbar[value=""] ~ div.techbar:before {
        content: "N/A";
}

div.durbar {
    width: 90%;
    height: 20px;
    border: 1px solid black;
    color: gray;
    text-align: center;
}

input.durbar[value="5"] ~ div.durbar {
    background: green;
}
input.durbar[value="5"] ~ div.durbar:before {
        content: "~ 100%";
}
input.durbar[value="4"] ~ div.durbar {
    background: yellow;
}
input.durbar[value="4"] ~ div.durbar:before {
        content: "~ 80%";
}
input.durbar[value="3"] ~ div.durbar {
    background: orange;
}
input.durbar[value="3"] ~ div.durbar:before {
        content: "~ 60%";
}
input.durbar[value="2"] ~ div.durbar {
    background: red;
}
input.durbar[value="2"] ~ div.durbar:before {
        content: "~ 40%";
}
input.durbar[value="1"] ~ div.durbar {
    background: purple;
}
input.durbar[value="1"] ~ div.durbar:before {
        content: "~ 20%";
}

.progressM,
.progressDM,
.progressD,
.progressP,
.progressLF,
.progressSTF,
.progressSLF {
  position: relative;
  border-width: 2px;
  border-color: white;
  border-style: groove;
  border-radius: 25px;
  background-color: black;
  width: 100%;
  height: 10px;
  }

.progressBars {
  flex: column; width: 50%; margin: 15px;
}

.progress {
    position: relative;
    overflow: hidden;
    bottom: 20%;
    background-color: cyan;
    margin: 5px;
    height: 50%;
    
}

.progressM[value="10"] ~ div.progress,
.progressDM[value="10"] ~ div.progress,
.progressD[value="10"] ~ div.progress,
.progressP[value="10"] ~ div.progress,
.progressLF[value="10"] ~ div.progress,
.progressSTF[value="10"] ~ div.progress,
.progressSLF[value="10"] ~ div.progress {
    content: "100%";
    width: 100%;
}
.progressM[value="9"] ~ div.progress,
.progressDM[value="9"] ~ div.progress,
.progressD[value="9"] ~ div.progress,
.progressP[value="9"] ~ div.progress,
.progressLF[value="9"] ~ div.progress,
.progressSTF[value="9"] ~ div.progress,
.progressSLF[value="9"] ~ div.progress {
    content: "~90%";
    width: 90%;
}
.progressM[value="8"] ~ div.progress,
.progressDM[value="8"] ~ div.progress,
.progressD[value="8"] ~ div.progress,
.progressP[value="8"] ~ div.progress,
.progressLF[value="8"] ~ div.progress,
.progressSTF[value="8"] ~ div.progress,
.progressSLF[value="8"] ~ div.progress {
    content: "~80%";
    width: 80%;
}
.progressM[value="7"] ~ div.progress,
.progressDM[value="7"] ~ div.progress,
.progressD[value="7"] ~ div.progress,
.progressP[value="7"] ~ div.progress,
.progressLF[value="7"] ~ div.progress,
.progressSTF[value="7"] ~ div.progress,
.progressSLF[value="7"] ~ div.progress {
    content: "~70%";
    width: 70%;
}
.progressM[value="6"] ~ div.progress,
.progressDM[value="6"] ~ div.progress,
.progressD[value="6"] ~ div.progress,
.progressP[value="6"] ~ div.progress,
.progressLF[value="6"] ~ div.progress,
.progressSTF[value="6"] ~ div.progress,
.progressSLF[value="6"] ~ div.progress {
    content: "~60%";
    width: 60%;
}
.progressM[value="5"] ~ div.progress,
.progressDM[value="5"] ~ div.progress,
.progressD[value="5"] ~ div.progress,
.progressP[value="5"] ~ div.progress,
.progressLF[value="5"] ~ div.progress,
.progressSTF[value="5"] ~ div.progress,
.progressSLF[value="5"] ~ div.progress {
    content: "~50%";
    width: 50%;
}
.progressM[value="4"] ~ div.progress,
.progressDM[value="4"] ~ div.progress,
.progressD[value="4"] ~ div.progress,
.progressP[value="4"] ~ div.progress,
.progressLF[value="4"] ~ div.progress,
.progressSTF[value="4"] ~ div.progress,
.progressSLF[value="4"] ~ div.progress {
    content: "~40%";
    width: 40%;
}
.progressM[value="3"] ~ div.progress,
.progressDM[value="3"] ~ div.progress,
.progressD[value="3"] ~ div.progress,
.progressP[value="3"] ~ div.progress,
.progressLF[value="3"] ~ div.progress,
.progressSTF[value="3"] ~ div.progress,
.progressSLF[value="3"] ~ div.progress {
    content: "~30%";
    width: 30%;
}
.progressM[value="2"] ~ div.progress,
.progressDM[value="2"] ~ div.progress,
.progressD[value="2"] ~ div.progress,
.progressP[value="2"] ~ div.progress,
.progressLF[value="2"] ~ div.progress,
.progressSTF[value="2"] ~ div.progress,
.progressSLF[value="2"] ~ div.progress {
    content: "~20%";
    width: 20%;
}
.progressM[value="1"] ~ div.progress,
.progressDM[value="1"] ~ div.progress,
.progressD[value="1"] ~ div.progress,
.progressP[value="1"] ~ div.progress,
.progressLF[value="1"] ~ div.progress,
.progressSTF[value="1"] ~ div.progress,
.progressSLF[value="1"] ~ div.progress {
    content: "~10%";
    width: 100%;
}
.progressM[value="0"] ~ div.progress,
.progressDM[value="0"] ~ div.progress,
.progressD[value="0"] ~ div.progress,
.progressP[value="0"] ~ div.progress,
.progressLF[value="0"] ~ div.progress,
.progressSTF[value="0"] ~ div.progress,
.progressSLF[value="0"] ~ div.progress {
    content: "Critical";
    width: 0%;
}